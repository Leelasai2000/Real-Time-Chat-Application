{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leela\\\\Desktop\\\\Web\\\\Mern Stack Projects\\\\Real Time Chat App\\\\client\\\\src\\\\context\\\\SocketContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/SocketContext.js\nimport React, { createContext, useEffect, useState, useContext } from 'react';\nimport { io } from 'socket.io-client';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SocketContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the socket easily\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n\n// The provider component\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:5001\");\n    newSocket.on('connect', () => {\n      console.log('✅ Socket connected:', newSocket.id);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('❌ Socket disconnected');\n    });\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useContext","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","SocketProvider","children","_s2","socket","setSocket","newSocket","on","console","log","id","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leela/Desktop/Web/Mern Stack Projects/Real Time Chat App/client/src/context/SocketContext.jsx"],"sourcesContent":["// src/context/SocketContext.js\r\nimport React, { createContext, useEffect, useState, useContext } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\n// Create the context\r\nexport const SocketContext = createContext();\r\n\r\n// Custom hook to use the socket easily\r\nexport const useSocket = () => useContext(SocketContext);\r\n\r\n// The provider component\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:5001\");\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('✅ Socket connected:', newSocket.id);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('❌ Socket disconnected');\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => newSocket.close();\r\n  }, []);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,EAAE,QAAQ,kBAAkB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMQ,SAAS,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,aAAa,CAAC;AAAA;;AAExD;AAAAE,EAAA,CAFaD,SAAS;AAGtB,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAGX,EAAE,CAAC,uBAAuB,CAAC;IAE7CW,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,SAAS,CAACI,EAAE,CAAC;IAClD,CAAC,CAAC;IAEFJ,SAAS,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;IAEFJ,SAAS,CAACC,SAAS,CAAC;IAEpB,OAAO,MAAMA,SAAS,CAACK,KAAK,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA,CAACC,aAAa,CAACc,QAAQ;IAACC,KAAK,EAAET,MAAO;IAAAF,QAAA,EACnCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,GAAA,CAxBWF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}