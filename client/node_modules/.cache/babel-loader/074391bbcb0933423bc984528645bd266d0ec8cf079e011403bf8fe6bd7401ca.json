{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leela\\\\Desktop\\\\Web\\\\Mern Stack Projects\\\\Real Time Chat App\\\\client\\\\src\\\\Context\\\\Socket.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\n\n// Create a Context to hold the socket instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\n\n// create a custom hook to use the socket context\nexport const useSocket = () => {\n  _s();\n  const socket = useContext(SocketContext); // Access socket from context\n  if (!socket) {\n    throw new Error(\"useSocket must be used within a SocketProvider\");\n  }\n  return socket; // Return the socket instance\n};\n_s(useSocket, \"0R2d+Tq5R59clvH3S7Q6dYnlbX0=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null); // Socket state to store the socket connection\n\n  useEffect(() => {\n    // Connect to the Socket.IO server on the backend (adjust URL if needed)\n    const newSocket = io(\"http://localhost:5001\");\n    setSocket(newSocket); // Store socket instance\n\n    // Clean up when the component unmounts\n    return () => newSocket.close();\n  }, []); // Empty dependency array ensures this runs once when the component mounts\n\n  return (\n    /*#__PURE__*/\n    // Provide the socket instance to the child components\n    _jsxDEV(SocketContext.Provider, {\n      value: socket,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s2(SocketProvider, \"NvwYO9vJOwIMt5STdlMKfWhuxZw=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","socket","Error","SocketProvider","children","_s2","setSocket","newSocket","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leela/Desktop/Web/Mern Stack Projects/Real Time Chat App/client/src/Context/Socket.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\n// Create a Context to hold the socket instance\r\nconst SocketContext = createContext();\r\n\r\n// create a custom hook to use the socket context\r\nexport const useSocket = () => {\r\n  const socket = useContext(SocketContext); // Access socket from context\r\n  if (!socket) {\r\n    throw new Error(\"useSocket must be used within a SocketProvider\");\r\n  }\r\n  return socket; // Return the socket instance\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null); // Socket state to store the socket connection\r\n\r\n  useEffect(() => {\r\n    // Connect to the Socket.IO server on the backend (adjust URL if needed)\r\n    const newSocket = io(\"http://localhost:5001\");\r\n    setSocket(newSocket); // Store socket instance\r\n\r\n    // Clean up when the component unmounts\r\n    return () => newSocket.close();\r\n  }, []); // Empty dependency array ensures this runs once when the component mounts\r\n\r\n  return (\r\n    // Provide the socket instance to the child components\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,EAAE,QAAQ,kBAAkB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMQ,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,MAAM,GAAGT,UAAU,CAACM,aAAa,CAAC,CAAC,CAAC;EAC1C,IAAI,CAACG,MAAM,EAAE;IACX,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,MAAM,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CANWD,SAAS;AAQtB,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM,CAACJ,MAAM,EAAEK,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAGZ,EAAE,CAAC,uBAAuB,CAAC;IAC7CW,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;;IAEtB;IACA,OAAO,MAAMA,SAAS,CAACC,KAAK,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;IAAA;IACE;IACAX,OAAA,CAACC,aAAa,CAACW,QAAQ;MAACC,KAAK,EAAET,MAAO;MAAAG,QAAA,EACnCA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;AAE7B,CAAC;AAACT,GAAA,CAlBWF,cAAc;AAAAY,EAAA,GAAdZ,cAAc;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}