{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leela\\\\Desktop\\\\Web\\\\Mern Stack Projects\\\\Real Time Chat App\\\\client\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSocket } from \"../context/SocketContext\";\n//import './Chat.css'; // Import the custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const socket = useSocket();\n  const [username, setUsername] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  // Load username and messages from localStorage\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n    const storedMessages = JSON.parse(localStorage.getItem(\"messages\")) || [];\n    setMessages(storedMessages);\n  }, []);\n\n  // Send a new message\n  const sendMessage = () => {\n    if (message.trim() !== \"\") {\n      const newMsg = {\n        content: message,\n        sender: username,\n        time: new Date().toLocaleTimeString()\n      };\n      socket.emit(\"send_message\", newMsg);\n      setMessage(\"\"); // Clear input\n    }\n  };\n\n  // Listen for incoming messages\n  useEffect(() => {\n    if (!socket) return;\n    const handleMessage = data => {\n      setMessages(prev => {\n        const updated = [...prev, data];\n        localStorage.setItem(\"messages\", JSON.stringify(updated));\n        return updated;\n      });\n    };\n    socket.on(\"receive_message\", handleMessage);\n    return () => {\n      socket.off(\"receive_message\", handleMessage);\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: username || \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), \"! Start chatting below.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === username ? \"sent\" : \"received\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: msg.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"btn btn-primary\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"W9gzedtb+sT6fkJhNXffJ67rfd0=\", false, function () {\n  return [useSocket];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useSocket","jsxDEV","_jsxDEV","Chat","_s","socket","username","setUsername","message","setMessage","messages","setMessages","storedUsername","localStorage","getItem","storedMessages","JSON","parse","sendMessage","trim","newMsg","content","sender","time","Date","toLocaleTimeString","emit","handleMessage","data","prev","updated","setItem","stringify","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leela/Desktop/Web/Mern Stack Projects/Real Time Chat App/client/src/pages/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"; \r\nimport { useSocket } from \"../context/SocketContext\";\r\n//import './Chat.css'; // Import the custom CSS\r\n\r\nconst Chat = () => {\r\n  const socket = useSocket();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // Load username and messages from localStorage\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem(\"username\");\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    }\r\n\r\n    const storedMessages = JSON.parse(localStorage.getItem(\"messages\")) || [];\r\n    setMessages(storedMessages);\r\n  }, []);\r\n\r\n  // Send a new message\r\n  const sendMessage = () => {\r\n    if (message.trim() !== \"\") {\r\n      const newMsg = {\r\n        content: message,\r\n        sender: username,\r\n        time: new Date().toLocaleTimeString(),\r\n      };\r\n\r\n      socket.emit(\"send_message\", newMsg);\r\n      setMessage(\"\"); // Clear input\r\n    }\r\n  };\r\n\r\n  // Listen for incoming messages\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handleMessage = (data) => {\r\n      setMessages((prev) => {\r\n        const updated = [...prev, data];\r\n        localStorage.setItem(\"messages\", JSON.stringify(updated));\r\n        return updated;\r\n      });\r\n    };\r\n\r\n    socket.on(\"receive_message\", handleMessage);\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\", handleMessage);\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Welcome to the Chat Room</h2>\r\n      <p>Welcome, <strong>{username || \"Guest\"}</strong>! Start chatting below.</p>\r\n\r\n      <div className=\"messages-box\">\r\n        {messages.map((msg, index) => (\r\n          <div \r\n            key={index} \r\n            className={`message ${msg.sender === username ? \"sent\" : \"received\"}`}>\r\n            <div className=\"message-header\">\r\n              <strong>{msg.sender}</strong> <span className=\"timestamp\">{msg.time}</span>\r\n            </div>\r\n            <p>{msg.content}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"message-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          className=\"form-control\"\r\n        />\r\n        <button onClick={sendMessage} className=\"btn btn-primary\">Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}